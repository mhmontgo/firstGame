<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
	<dict>
		<key>fileTypes</key>
		<array>
			<string>vsh</string>
			<string>fsh</string>
		</array>
		<key>firstLineMatch</key>
		<string></string>
		<key>name</key>
		<string>HLSL</string>
		<key>patterns</key>
		<array>
			<dict>
				<key>name</key>
				<string>keyword.preprocessor.hlsl</string>
				<key>match</key>
				<string>^\s*#\s*(define|elif|else|endif|ifdef|ifndef|if|undef|include|line|error|pragma)</string>
			</dict>
			<dict>
				<key>name</key>
				<string>keyword.control.hlsl</string>
				<key>match</key>
				<string>\b(break|case|continue|default|discard|do|else|for|if|return|switch|while|compile|typedef)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>storage.type.hlsl</string>
				<key>match</key>
				<string>\b(bool([1-4](x[1-4])?)?|double([1-4](x[1-4])?)?|dword|float([1-4](x[1-4])?)?|half([1-4](x[1-4])?)?|int([1-4](x[1-4])?)?|matrix|min10float([1-4](x[1-4])?)?|min12int([1-4](x[1-4])?)?|min16float([1-4](x[1-4])?)?|min16int([1-4](x[1-4])?)?|min16uint([1-4](x[1-4])?)?|unsigned|uint([1-4](x[1-4])?)?|vector|void)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>support.constant.hlsl</string>
				<key>match</key>
				<string>\b(true|false)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>support.function.hlsl</string>
				<key>match</key>
				<string>\b([a-zA-Z_][a-zA-Z0-9_]*)(?=[\s]*\()</string>
			</dict>
			<dict>
				<key>name</key>
				<string>support.variable.semantic.hlsl</string>
				<key>match</key>
				<string>(?&lt;=\:\s|\:)(?i:BINORMAL[0-9]*|BLENDINDICES[0-9]*|BLENDWEIGHT[0-9]*|COLOR[0-9]*|NORMAL[0-9]*|POSITIONT|POSITION|PSIZE[0-9]*|TANGENT[0-9]*|TEXCOORD[0-9]*|FOG|TESSFACTOR[0-9]*|VFACE|VPOS|DEPTH[0-9]*)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>support.variable.semantic.sm4.hlsl</string>
				<key>match</key>
				<string>(?&lt;=\:\s|\:)(?i:SV_ClipDistance[0-9]*|SV_CullDistance[0-9]*|SV_Coverage|SV_Depth|SV_DepthGreaterEqual[0-9]*|SV_DepthLessEqual[0-9]*|SV_InstanceID|SV_IsFrontFace|SV_Position|SV_RenderTargetArrayIndex|SV_SampleIndex|SV_StencilRef|SV_Target[0-7]?|SV_VertexID|SV_ViewportArrayIndex)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>support.variable.semantic.sm5.hlsl</string>
				<key>match</key>
				<string>(?&lt;=\:\s|\:)(?i:SV_DispatchThreadID|SV_DomainLocation|SV_GroupID|SV_GroupIndex|SV_GroupThreadID|SV_GSInstanceID|SV_InsideTessFactor|SV_OutputControlPointID|SV_TessFactor)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>support.variable.semantic.sm5_1.hlsl</string>
				<key>match</key>
				<string>(?&lt;=\:\s|\:)(?i:SV_InnerCoverage|SV_StencilRef)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>storage.modifier.hlsl</string>
				<key>match</key>
				<string>\b(column_major|const|export|extern|globallycoherent|groupshared|inline|inout|in|out|precise|row_major|shared|static|uniform|volatile)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>storage.modifier.float.hlsl</string>
				<key>match</key>
				<string>\b(snorm|unorm)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>storage.modifier.postfix.hlsl</string>
				<key>match</key>
				<string>\b(packoffset|register)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>storage.modifier.interpolation.hlsl</string>
				<key>match</key>
				<string>\b(centroid|linear|nointerpolation|noperspective|sample)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>storage.modifier.geometryshader.hlsl</string>
				<key>match</key>
				<string>\b(lineadj|line|point|triangle|triangleadj)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>support.type.other.hlsl</string>
				<key>match</key>
				<string>\b(string)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>support.type.object.hlsl</string>
				<key>match</key>
				<string>\b(AppendStructuredBuffer|Buffer|ByteAddressBuffer|ConstantBuffer|ConsumeStructuredBuffer|InputPatch|OutputPatch)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>support.type.object.rasterizerordered.hlsl</string>
				<key>match</key>
				<string>\b(RasterizerOrderedBuffer|RasterizerOrderedByteAddressBuffer|RasterizerOrderedStructuredBuffer|RasterizerOrderedTexture1D|RasterizerOrderedTexture1DArray|RasterizerOrderedTexture2D|RasterizerOrderedTexture2DArray|RasterizerOrderedTexture3D)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>support.type.object.rw.hlsl</string>
				<key>match</key>
				<string>\b(RWBuffer|RWByteAddressBuffer|RWStructuredBuffer|RWTexture1D|RWTexture1DArray|RWTexture2D|RWTexture2DArray|RWTexture3D)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>support.type.object.geometryshader.hlsl</string>
				<key>match</key>
				<string>\b(LineStream|PointStream|TriangleStream)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>support.type.sampler.legacy.hlsl</string>
				<key>match</key>
				<string>\b(sampler|sampler1D|sampler2D|sampler3D|samplerCUBE|sampler_state)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>support.type.sampler.hlsl</string>
				<key>match</key>
				<string>\b(SamplerState|SamplerComparisonState)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>support.type.texture.legacy.hlsl</string>
				<key>match</key>
				<string>\b(texture2D|textureCUBE)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>support.type.texture.hlsl</string>
				<key>match</key>
				<string>\b(Texture1D|Texture1DArray|Texture2D|Texture2DArray|Texture2DMS|Texture2DMSArray|Texture3D|TextureCube|TextureCubeArray)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>storage.type.structured.hlsl</string>
				<key>match</key>
				<string>\b(cbuffer|class|interface|namespace|struct|tbuffer)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>support.constant.property-value.fx.hlsl</string>
				<key>match</key>
				<string>\b(FALSE|TRUE|NULL)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>support.type.fx.hlsl</string>
				<key>match</key>
				<string>\b(BlendState|DepthStencilState|RasterizerState)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>storage.type.fx.technique.hlsl</string>
				<key>match</key>
				<string>\b(technique|Technique|technique10|technique11|pass)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>meta.object-literal.key.fx.blendstate.hlsl</string>
				<key>match</key>
				<string>\b(AlphaToCoverageEnable|BlendEnable|SrcBlend|DestBlend|BlendOp|SrcBlendAlpha|DestBlendAlpha|BlendOpAlpha|RenderTargetWriteMask)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>meta.object-literal.key.fx.depthstencilstate.hlsl</string>
				<key>match</key>
				<string>\b(DepthEnable|DepthWriteMask|DepthFunc|StencilEnable|StencilReadMask|StencilWriteMask|FrontFaceStencilFail|FrontFaceStencilZFail|FrontFaceStencilPass|FrontFaceStencilFunc|BackFaceStencilFail|BackFaceStencilZFail|BackFaceStencilPass|BackFaceStencilFunc)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>meta.object-literal.key.fx.rasterizerstate.hlsl</string>
				<key>match</key>
				<string>\b(FillMode|CullMode|FrontCounterClockwise|DepthBias|DepthBiasClamp|SlopeScaleDepthBias|ZClipEnable|ScissorEnable|MultiSampleEnable|AntiAliasedLineEnable)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>meta.object-literal.key.fx.samplerstate.hlsl</string>
				<key>match</key>
				<string>\b(Filter|AddressU|AddressV|AddressW|MipLODBias|MaxAnisotropy|ComparisonFunc|BorderColor|MinLOD|MaxLOD)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>support.constant.property-value.fx.blend.hlsl</string>
				<key>match</key>
				<string>\b(?i:ZERO|ONE|SRC_COLOR|INV_SRC_COLOR|SRC_ALPHA|INV_SRC_ALPHA|DEST_ALPHA|INV_DEST_ALPHA|DEST_COLOR|INV_DEST_COLOR|SRC_ALPHA_SAT|BLEND_FACTOR|INV_BLEND_FACTOR|SRC1_COLOR|INV_SRC1_COLOR|SRC1_ALPHA|INV_SRC1_ALPHA)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>support.constant.property-value.fx.blendop.hlsl</string>
				<key>match</key>
				<string>\b(?i:ADD|SUBTRACT|REV_SUBTRACT|MIN|MAX)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>support.constant.property-value.fx.depthwritemask.hlsl</string>
				<key>match</key>
				<string>\b(?i:ALL)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>support.constant.property-value.fx.comparisonfunc.hlsl</string>
				<key>match</key>
				<string>\b(?i:NEVER|LESS|EQUAL|LESS_EQUAL|GREATER|NOT_EQUAL|GREATER_EQUAL|ALWAYS)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>support.constant.property-value.fx.stencilop.hlsl</string>
				<key>match</key>
				<string>\b(?i:KEEP|REPLACE|INCR_SAT|DECR_SAT|INVERT|INCR|DECR)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>support.constant.property-value.fx.fillmode.hlsl</string>
				<key>match</key>
				<string>\b(?i:WIREFRAME|SOLID)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>support.constant.property-value.fx.cullmode.hlsl</string>
				<key>match</key>
				<string>\b(?i:NONE|FRONT|BACK)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>support.constant.property-value.fx.filter.hlsl</string>
				<key>match</key>
				<string>\b(?i:MIN_MAG_MIP_POINT|MIN_MAG_POINT_MIP_LINEAR|MIN_POINT_MAG_LINEAR_MIP_POINT|MIN_POINT_MAG_MIP_LINEAR|MIN_LINEAR_MAG_MIP_POINT|MIN_LINEAR_MAG_POINT_MIP_LINEAR|MIN_MAG_LINEAR_MIP_POINT|MIN_MAG_MIP_LINEAR|ANISOTROPIC|COMPARISON_MIN_MAG_MIP_POINT|COMPARISON_MIN_MAG_POINT_MIP_LINEAR|COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT|COMPARISON_MIN_POINT_MAG_MIP_LINEAR|COMPARISON_MIN_LINEAR_MAG_MIP_POINT|COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR|COMPARISON_MIN_MAG_LINEAR_MIP_POINT|COMPARISON_MIN_MAG_MIP_LINEAR|COMPARISON_ANISOTROPIC|TEXT_1BIT)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>support.constant.property-value.fx.textureaddressmode.hlsl</string>
				<key>match</key>
				<string>\b(?i:WRAP|MIRROR|CLAMP|BORDER|MIRROR_ONCE)\b</string>
			</dict>
			<dict>
				<key>match</key>
				<string>(?x)
					(  (?i:
					\$ ([0-9A-Fa-f]+)?        # Hexadecimal
					|  \b 0x ([0-9A-Fa-f]+)?  # Hexadecimal
					|  \b    ([0-9]+[0-9]*)   # Decimal
					|      (\#(([A-Fa-f0-9]{2}){1,3})\b)
					)
					|  \b([0-9]+[0-9]*)?(\.\B|\.([0-9]+)\b)
					)</string>
				<key>name</key>
				<string>constant.numeric.hlsl</string>
			</dict>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>begin</key>
						<string>/\*</string>
						<key>beginCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.comment.begin.hlsl</string>
							</dict>
						</dict>
						<key>end</key>
						<string>\*/</string>
						<key>endCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.definition.comment.end.hlsl</string>
							</dict>
						</dict>
						<key>name</key>
						<string>comment.block.hlsl</string>
					</dict>
					<dict>
						<key>begin</key>
						<string>//</string>
						<key>end</key>
						<string>\n</string>
						<key>name</key>
						<string>comment.line.double-slash.hlsl</string>
					</dict>
				</array>
			</dict>
			<dict>
				<key>include</key>
				<string>#block</string>
			</dict>
			<dict>
				<key>name</key>
				<string>support.variable</string>
				<key>match</key>
				<string>\b(gm_BaseTexture|gm_Matrices|gm_LightingEnabled|gm_VS_FogEnabled|gm_FogStart|gm_RcpFogRange|gm_PS_FogEnabled|gm_FogColour|gm_AlphaTestEnabled|gm_AlphaRefValue)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>support.constant</string>
				<key>match</key>
				<string>\b(x|y|z|w|r|g|b|a|s|t|q|p|xyzw|xyz|xy|rgba|rgb|bgr|gbra|grba|bgra|brga|rbga|s[0-7]|c([01]?[0-9][0-9]?|2[0-4][0-9]|250)|MAX_VS_LIGHTS|MATRIX_VIEW|MATRIX_PROJECTION|MATRIX_WORLD|MATRIX_WORLD_VIEW|MATRIX_WORLD_VIEW_PROJECTION|MATRIX_MAX|__LINE__|__FILE__|__VERSION__)\b</string>
			</dict>
			<dict>
				<key>name</key>
				<string>support.function</string>
				<key>match</key>
				<string>\b(abs|acos|all|any|asin|atan|atan2|ceil|clamp|clip|cos|cosh|cross|D3DCOLORtoUBYTE4|ddx9xddy|degrees|determinant|distance|dot|exp|exp2|faceforward|floor|fmod|frac|frexp|fwidth|isfinite|isinf|isnan|ldexp|len|length|lerp|lit|log|log10|log2|max|min|modf|mul|noise|normalize|pow|radians|reflect|refract|round|rsqrt|saturate|sign|sin|sincos|sinh|smoothstep|sqrt|step|tan|tanh|tex1D|tex1Dbias|tex1Dgrad|tex1Dlod|tex1Dproj|tex2D|tex2Dbias|tex2Dgrad|tex2Dlod|tex2Dproj|tex3D|tex3Dbias|tex3Dgrad|tex3Dlod|tex3Dproj|texCUBE|texCUBE|texCUBEbias|texCUBEgrad|texCUBElod|texCUBEproj|transpose|trunc)\b</string>
			</dict>
		</array>
		<key>repository</key>
		<dict>
			<key>block</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>begin</key>
						<string>\{</string>
						<key>beginCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.section.block.begin.hlsl</string>
							</dict>
						</dict>
						<key>end</key>
						<string>\}</string>
						<key>endCaptures</key>
						<dict>
							<key>0</key>
							<dict>
								<key>name</key>
								<string>punctuation.section.block.end.hlsl</string>
							</dict>
						</dict>
						<key>name</key>
						<string>meta.block.hlsl</string>
						<key>patterns</key>
						<array>
							<dict>
								<key>include</key>
								<string>#block_contents</string>
							</dict>
						</array>
					</dict>
				</array>
			</dict>
			<key>block_contents</key>
			<dict>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>#block</string>
					</dict>
					<dict>
						<key>include</key>
						<string>$base</string>
					</dict>
				</array>
			</dict>
			<key>parens</key>
			<dict>
				<key>begin</key>
				<string>\(</string>
				<key>beginCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.section.parens.begin.hlsl</string>
					</dict>
				</dict>
				<key>end</key>
				<string>\)</string>
				<key>endCaptures</key>
				<dict>
					<key>0</key>
					<dict>
						<key>name</key>
						<string>punctuation.section.parens.end.hlsl</string>
					</dict>
				</dict>
				<key>name</key>
				<string>meta.parens.hlsl</string>
				<key>patterns</key>
				<array>
					<dict>
						<key>include</key>
						<string>$base</string>
					</dict>
				</array>
			</dict>
		</dict>
		<key>scopeName</key>
		<string>source.hlsl</string>
		<key>uuid</key>
		<string>00a66b20-e972-48dc-ba39-9cc2441d8e6d</string>
	</dict>
</plist>
