GMStdVar_Story,"${ifeq(""${expr_relative}"", ""0"", ""Set ${var} to ${expr}"", ""Add ${expr} to ${var}"")}${show_apply_to}${show_input_count}","${ifeq(""${expr_relative}"", ""0"", ""Set ${var} to ${expr}"", ""Add ${expr} to ${var}"")}${show_apply_to}${show_input_count}",,GML Visual story text
GMStdTempVar_Story,"Declare temp ${var}${ifeq(""${value}"", """", """", "" and set it to ${value}"")}${show_apply_to}${show_input_count}","Declare temp ${var}${ifeq(""${value}"", """", """", "" and set it to ${value}"")}${show_apply_to}${show_input_count}",,GML Visual story text
GMStdSetGlobal_Story,"${ifeq(""${value_relative}"", ""0"", ""Set global variable ${var} to ${value}"", ""Add ${value} to global variable ${var}"")}${show_apply_to}${show_input_count}","${ifeq(""${value_relative}"", ""0"", ""Set global variable ${var} to ${value}"", ""Add ${value} to global variable ${var}"")}${show_apply_to}${show_input_count}",,GML Visual story text
GMStdGetGlobal_Story,"Get global variable ${var} into ${temp_output}${show_apply_to}${show_input_count}","Get global variable ${var} into ${temp_output}${show_apply_to}${show_input_count}",,GML Visual story text
GMStdIfVar_Story,"If ${var} is ${ifeq(""${not}"", ""1"", ""not "", """")}${switch(""${op}"", ""equal to"", ""less than"", ""greater than"", ""less than or equal to"", ""greater than or equal to"")} ${value}${show_apply_to}","If ${var} is ${ifeq(""${not}"", ""1"", ""not "", """")}${switch(""${op}"", ""equal to"", ""less than"", ""greater than"", ""less than or equal to"", ""greater than or equal to"")} ${value}${show_apply_to}",,GML Visual story text
GMStdIfExpr_Story,"If ${expr} is ${ifeq(""${not}"", ""0"", ""true"", ""false"")}${show_apply_to}${show_input_count}","If ${expr} is ${ifeq(""${not}"", ""0"", ""true"", ""false"")}${show_apply_to}${show_input_count}",,GML Visual story text
GMStdIfUndef_Story,"If ${var} is ${ifeq(""${not}"", ""0"", """", ""not "")}undefined${show_apply_to}${show_input_count}","If ${var} is ${ifeq(""${not}"", ""0"", """", ""not "")}undefined${show_apply_to}${show_input_count}",,GML Visual story text
GMStdElse_Story,"Else","Else",,GML Visual story text
GMStdExCode_Story,"${ifeq(""${overridden_name}"", """", ""Execute code"", ""${overridden_name}"")}${show_apply_to}","${ifeq(""${overridden_name}"", """", ""Execute code"", ""${overridden_name}"")}${show_apply_to}",,GML Visual story text
GMStdExScript_Story,"${ifeq(""${var}"", """", ""Execute"", ""Execute and set ${temp_var} to return value of"")} ${script}${ifeq(""${arg}"", """", """", ""${ifeq(\""${input_count}\"", \""1\"", \"" with 1 argument\"", \"" with ${input_count} arguments\"")}"")}${show_apply_to}","${ifeq(""${var}"", """", ""Execute"", ""Execute and set ${temp_var} to return value of"")} ${script}${ifeq(""${arg}"", """", """", ""${ifeq(\""${input_count}\"", \""1\"", \"" with 1 argument\"", \"" with ${input_count} arguments\"")}"")}${show_apply_to}",,GML Visual story text
GMStdCallFunction_Story,"${ifeq(""${var}"", """", ""Call"", ""Set ${temp_var} to return value of"")} ${function}${ifeq(""${arg}"", """", """", ""${ifeq(\""${input_count}\"", \""1\"", \"" with 1 argument\"", \"" with ${input_count} arguments\"")}"")}${show_apply_to}","${ifeq(""${var}"", """", ""Call"", ""Set ${temp_var} to return value of"")} ${function}${ifeq(""${arg}"", """", """", ""${ifeq(\""${input_count}\"", \""1\"", \"" with 1 argument\"", \"" with ${input_count} arguments\"")}"")}${show_apply_to}",,GML Visual story text
GMStdRet_Story,"Return ${value}${show_apply_to}","Return ${value}${show_apply_to}",,GML Visual story text
GMStdApplyTo_Story,"Apply to ${applyto}","Apply to ${applyto}",,GML Visual story text
GMStdMacro_Story,"Define macro ${macro} as ${value}${show_apply_to}${show_input_count}","Define macro ${macro} as ${value}${show_apply_to}${show_input_count}",,GML Visual story text
GMStdExit_Story,"Exit the current event","Exit the current event",,GML Visual story text
GMStdInstCreate_Story,"Create ${objectid} at ${dnd_pos}${ifeq(""${var}"", """", """", "" into ${temp_var}"")}${show_apply_to}","Create ${objectid} at ${dnd_pos}${ifeq(""${var}"", """", """", "" into ${temp_var}"")}${show_apply_to}",,GML Visual story text
GMStdInstDestroy_Story,"Destroy ${ifeq(""${applyto}"", ""self"", ""this instance"", ""${applyto}"")}${show_apply_to}","Destroy ${ifeq(""${applyto}"", ""self"", ""this instance"", ""${applyto}"")}${show_apply_to}",,GML Visual story text
GMStdDestroyAtPos_Story,"Destroy instances at ${dnd_pos}${show_apply_to}","Destroy instances at ${dnd_pos}${show_apply_to}",,GML Visual story text
GMStdInstChange_Story,"Change ${ifeq(""${applyto}"", ""self"", """", ""${applyto} "")}into ${objind}${show_apply_to}","Change ${ifeq(""${applyto}"", ""self"", """", ""${applyto} "")}into ${objind}${show_apply_to}",,GML Visual story text
GMStdSetAlarm_Story,"${ifeq(""${steps_relative}"", ""0"", ""Set alarm ${alarm} to ${steps}"", ""Add ${steps} to alarm ${alarm}"")}${show_apply_to}${show_input_count}","${ifeq(""${steps_relative}"", ""0"", ""Set alarm ${alarm} to ${steps}"", ""Add ${steps} to alarm ${alarm}"")}${show_apply_to}${show_input_count}",,GML Visual story text
GMStdGetAlarm_Story,"Get alarm ${alarm} into ${temp_var}${show_apply_to}","Get alarm ${alarm} into ${temp_var}${show_apply_to}",,GML Visual story text
GMStdInstCount_Story,"Get ${object} count into ${temp_var}${show_apply_to}","Get ${object} count into ${temp_var}${show_apply_to}",,GML Visual story text
GMStdCallUserEvent_Story,"Call user event ${event}${show_apply_to}${show_input_count}","Call user event ${event}${show_apply_to}${show_input_count}",,GML Visual story text
GMStdSetInstanceVar_Story,"Set instance variable ${dnd_set_inst_vars} to ${value}${show_apply_to}${show_input_count}","Set instance variable ${dnd_set_inst_vars} to ${value}${show_apply_to}${show_input_count}",,GML Visual story text
GMStdGetInstanceVar_Story,"Get instance variable ${dnd_inst_vars} into ${temp_target}${show_apply_to}${show_input_count}","Get instance variable ${dnd_get_inst_vars} into ${temp_target}${show_apply_to}${show_input_count}",,GML Visual story text
GMStdSetSprite_Story,"Set sprite to ${spriteind} at frame ${imageind}${show_apply_to}","Set sprite to ${spriteind} at frame ${imageind}${show_apply_to}",,GML Visual story text
GMStdRotSprite_Story,"${ifeq(""${angle_relative}"", ""0"", ""Set rotation to ${angle}"", ""Add ${angle} to rotation"")}${show_apply_to}","${ifeq(""${angle_relative}"", ""0"", ""Set rotation to ${angle}"", ""Add ${angle} to rotation"")}${show_apply_to}",,GML Visual story text
GMStdSpriteAnimSpd_Story,"${ifeq(""${speed_relative}"", ""0"", ""Set animation speed to ${speed}"", ""Add ${speed} to animation speed"")}${show_apply_to}","${ifeq(""${speed_relative}"", ""0"", ""Set animation speed to ${speed}"", ""Add ${speed} to animation speed"")}${show_apply_to}",,GML Visual story text
GMStdSpriteScale_Story,"Scale${ifeq(""${applyto}"", ""self"", """", "" ${applyto}"")} to ${ifeq(""${xscale_relative}"", ""0"", ""${xscale}"", ""image_xscale${ifeq(\""${xscale}\"", \""0\"", \""\"", \""+${xscale}\"")}"")},${ifeq(""${yscale_relative}"", ""0"", ""${yscale}"", ""image_yscale${ifeq(\""${yscale}\"", \""0\"", \""\"", \""+${yscale}\"")}"")}${show_apply_to}","Scale${ifeq(""${applyto}"", ""self"", """", "" ${applyto}"")} to ${ifeq(""${xscale_relative}"", ""0"", ""${xscale}"", ""image_xscale${ifeq(\""${xscale}\"", \""0\"", \""\"", \""+${xscale}\"")}"")},${ifeq(""${yscale_relative}"", ""0"", ""${yscale}"", ""image_yscale${ifeq(\""${yscale}\"", \""0\"", \""\"", \""+${yscale}\"")}"")}${show_apply_to}",,GML Visual story text
GMStdSpriteAlpha_Story,"${ifeq(""${alpha_relative}"", ""0"", ""Set alpha to ${alpha}"", ""Add ${alpha} to alpha"")}${show_apply_to}","${ifeq(""${alpha_relative}"", ""0"", ""Set alpha to ${alpha}"", ""Add ${alpha} to alpha"")}${show_apply_to}",,GML Visual story text
GMStdSpriteColor_Story,"Set sprite blend colour to ${colour}${show_apply_to}","Set sprite blend colour to ${colour}${show_apply_to}",,GML Visual story text
GMStdInstExists_Story,"Check if ${obj} ${ifeq(""${not}"", ""1"", ""does not exist"", ""exists"")}${show_apply_to}","Check if ${obj} ${ifeq(""${not}"", ""1"", ""does not exist"", ""exists"")}${show_apply_to}",,GML Visual story text
GMStdInheritEvent_Story,"Call parent event${show_apply_to}","Call parent event${show_apply_to}",,GML Visual story text
GMStdSeqGetLength_Story,"Get length of sequence instance ${sequenceelmid} into ${temp_var}","Get length of sequence instance ${sequenceelmid} into ${temp_var}",,GML Visual story text
GMStdSeqGetHead_Story,"Get head of sequence instance ${sequenceelmid} into ${temp_var}","Get head of sequence instance ${sequenceelmid} into ${temp_var}",,GML Visual story text
GMStdSeqSetHead_Story,"Set head of sequence instance ${sequenceelmid} to ${var}","Set head of sequence instance ${sequenceelmid} to ${var}",,GML Visual story text
GMStdIfMousePressed_Story,"If mouse button ${button} is${ifeq(""${not}"", ""0"", """", "" not"")} pressed${show_apply_to}","If mouse button ${button} is${ifeq(""${not}"", ""0"", """", "" not"")} pressed${show_apply_to}",,GML Visual story text
GMStdIfMouseDown_Story,"If mouse button ${button} is${ifeq(""${not}"", ""0"", """", "" not"")} down${show_apply_to}","If mouse button ${button} is${ifeq(""${not}"", ""0"", """", "" not"")} down${show_apply_to}",,GML Visual story text
GMStdIfMouseUp_Story,"If mouse button ${button} is${ifeq(""${not}"", ""0"", """", "" not"")} released${show_apply_to}","If mouse button ${button} is${ifeq(""${not}"", ""0"", """", "" not"")} released${show_apply_to}",,GML Visual story text
GMStdIfKeyPressed_Story,"If ${key} is${ifeq(""${not}"", ""0"", """", "" not"")} pressed${show_apply_to}","If ${key} is${ifeq(""${not}"", ""0"", """", "" not"")} pressed${show_apply_to}",,GML Visual story text
GMStdIfKeyDown_Story,"If ${key} is${ifeq(""${not}"", ""0"", """", "" not"")} down${show_apply_to}","If ${key} is${ifeq(""${not}"", ""0"", """", "" not"")} down${show_apply_to}",,GML Visual story text
GMStdIfKeyUp_Story,"If ${key} is${ifeq(""${not}"", ""0"", """", "" not"")} released${show_apply_to}","If ${key} is${ifeq(""${not}"", ""0"", """", "" not"")} released${show_apply_to}",,GML Visual story text
GMStdVKeyShow_Story,"Show virtual keyboard with ${keyboard_type}${show_apply_to}","Show virtual keyboard with ${keyboard_type}${show_apply_to}",,GML Visual story text
GMStdVKeyHide_Story,"Hide virtual keyboard","Hide virtual keyboard",,GML Visual story text
GMStdVKeyHeight_Story,"Get virtual keyboard height into ${temp_target}","Get virtual keyboard height into ${temp_target}",,GML Visual story text
GMStdVKeyStatus_Story,"If virtual keyboard is${ifeq(""${not}"", ""0"", """", "" not"")} showing${ifeq(""${target}"", """", """", "" into ${temp_target}"")}${show_apply_to}","If virtual keyboard is${ifeq(""${not}"", ""0"", """", "" not"")} showing${ifeq(""${target}"", """", """", "" into ${temp_target}"")}${show_apply_to}",,GML Visual story text
GMStdGPAxis_Story,"Get ${axis} axis value on gamepad ${gp} into ${temp_var}${show_apply_to}","Get ${axis} axis value on gamepad ${gp} into ${temp_var}${show_apply_to}",,GML Visual story text
GMStdGPTrigger_Story,"Get ${trigger} value on gamepad ${gp} into ${temp_var}${show_apply_to}","Get ${trigger} value on gamepad ${gp} into ${temp_var}${show_apply_to}",,GML Visual story text
GMStdGpDeviceC_Story,"Get gamepad device count into ${temp_var}${show_apply_to}","Get gamepad device count into ${temp_var}${show_apply_to}",,GML Visual story text
GMStdGPConnc_Story,"Get whether gamepad ${gp} is connected into ${temp_var}${show_apply_to}","Get whether gamepad ${gp} is connected into ${temp_var}${show_apply_to}",,GML Visual story text
GMStdGPDeadzone_Story,"Set deadzone of gamepad ${gp} to ${deadzone}${show_apply_to}","Set deadzone of gamepad ${gp} to ${deadzone}${show_apply_to}",,GML Visual story text
GMStdGPThreshold_Story,"Set button threshold of gamepad ${gp} to ${threshold}${show_apply_to}","Set button threshold of gamepad ${gp} to ${threshold}${show_apply_to}",,GML Visual story text
GMStdIfGPDown_Story,"If ${btn} on gamepad ${gp} is${ifeq(""${not}"", ""0"", """", "" not"")} down${show_apply_to}","If ${btn} on gamepad ${gp} is${ifeq(""${not}"", ""0"", """", "" not"")} down${show_apply_to}",,GML Visual story text
GMStdIfGPPressed_Story,"If ${btn} on gamepad ${gp} is${ifeq(""${not}"", ""0"", """", "" not"")} pressed${show_apply_to}","If ${btn} on gamepad ${gp} is${ifeq(""${not}"", ""0"", """", "" not"")} pressed${show_apply_to}",,GML Visual story text
GMStdIfGPUp_Story,"If ${btn} on gamepad ${gp} is${ifeq(""${not}"", ""0"", """", "" not"")} released${show_apply_to}","If ${btn} on gamepad ${gp} is${ifeq(""${not}"", ""0"", """", "" not"")} released${show_apply_to}",,GML Visual story text
GMStdDirFixed_Story,"${ifeq(""${direction}"", ""-1"", ""Stop movement"", ""Set direction to ${direction}"")}${show_apply_to}","${ifeq(""${direction}"", ""-1"", ""Stop movement"", ""Set direction to ${direction}"")}${show_apply_to}",,GML Visual story text
GMStdDirFree_Story,"${ifeq(""${direction_relative}"", ""0"", ""Set direction to ${direction}"", ""Add ${direction} to direction"")}${show_apply_to}","${ifeq(""${direction_relative}"", ""0"", ""Set direction to ${direction}"", ""Add ${direction} to direction"")}${show_apply_to}",,GML Visual story text
GMStdDirPoint_Story,"Set direction towards ${dnd_position}${show_apply_to}","Set direction towards ${dnd_position}${show_apply_to}",,GML Visual story text
GMStdDirRandom_Story,"${ifeq(""${direction}"", ""-1"", ""Stop movement"", ""Set random direction from ${direction}"")}${show_apply_to}","${ifeq(""${direction}"", ""-1"", ""Stop movement"", ""Set random direction from ${direction}"")}${show_apply_to}",,GML Visual story text
GMStdSpeed_Story,"${ifeq(""${speed_relative}"", ""1"", ""Add ${speed} to ${switch('${type}', 'speed', 'horizontal speed', 'vertical speed')}"", ""Set ${switch('${type}', 'speed', 'horizontal speed', 'vertical speed')} to ${speed}"")}${show_apply_to}","${ifeq(""${speed_relative}"", ""1"", ""Add ${speed} to ${switch('${type}', 'speed', 'horizontal speed', 'vertical speed')}"", ""Set ${switch('${type}', 'speed', 'horizontal speed', 'vertical speed')} to ${speed}"")}${show_apply_to}",,GML Visual story text
GMStdGravDir_Story,"${ifeq(""${direction_relative}"", ""1"", ""Add ${direction} to gravity direction"", ""Set gravity direction to ${direction}"")}${show_apply_to}","${ifeq(""${direction_relative}"", ""1"", ""Add ${direction} to gravity direction"", ""Set gravity direction to ${direction}"")}${show_apply_to}",,GML Visual story text
GMStdGravForce_Story,"${ifeq(""${force_relative}"", ""1"", ""Add ${force} to gravity force"", ""Set gravity force to ${force}"")}${show_apply_to}","${ifeq(""${force_relative}"", ""1"", ""Add ${force} to gravity force"", ""Set gravity force to ${force}"")}${show_apply_to}",,GML Visual story text
GMStdReverse_Story,"Reverse ${switch(""${dir}"", ""direction"", ""horizontal speed"", ""vertical speed"", ""gravitational direction"")}${show_apply_to}","Reverse ${switch(""${dir}"", ""direction"", ""horizontal speed"", ""vertical speed"", ""gravitational direction"")}${show_apply_to}",,GML Visual story text
GMStdFriction_Story,"${ifeq(""${friction_relative}"", ""1"", ""Add ${friction} to friction"", ""Set friction to ${friction}"")}${show_apply_to}","${ifeq(""${friction_relative}"", ""1"", ""Add ${friction} to friction"", ""Set friction to ${friction}"")}${show_apply_to}",,GML Visual story text
GMStdJumpPoint_Story,"Jump to ${dnd_position}${show_apply_to}","Jump to ${dnd_position}${show_apply_to}",,GML Visual story text
GMStdJumpStart_Story,"${ifeq(""${applyto}"", ""self"", ""Jump to start"", ""Jump ${applyto} to start"")}","${ifeq(""${applyto}"", ""self"", ""Jump to start"", ""Jump ${applyto} to start"")}",,GML Visual story text
GMStdSnapPos_Story,"Snap ${ifeq(""${applyto}"", ""self"", """", ""${applyto}"")} to ${xsnap},${ysnap}${show_apply_to}","Snap ${ifeq(""${applyto}"", ""self"", """", ""${applyto}"")} to ${xsnap},${ysnap}${show_apply_to}",,GML Visual story text
GMStdWrapRoom_Story,"Wrap${ifeq(""${applyto}"", ""self"", """", "" ${applyto}"")} around room${show_apply_to}","Wrap${ifeq(""${applyto}"", ""self"", """", "" ${applyto}"")} around room${show_apply_to}",,GML Visual story text
GMStdIfAnyObjAt_Story,"If ${ifeq(""${not}"", ""0"", ""any"", ""no"")} instance is overlapping self at ${dnd_position}${show_apply_to}","If ${ifeq(""${not}"", ""0"", ""any"", ""no"")} instance is overlapping self at ${dnd_position}${show_apply_to}",,GML Visual story text
GMStdIfObjAt_Story,"If ${object} is${ifeq(""${not}"", ""0"", """", "" not"")} overlapping self at ${dnd_position}${ifeq(""${target}"", """", """", "" into ${temp_target}"")}${show_apply_to}${show_input_count}","If ${object} is${ifeq(""${not}"", ""0"", """", "" not"")} overlapping self at ${dnd_position}${ifeq(""${target}"", """", """", "" into ${temp_target}"")}${show_apply_to}${show_input_count}",,GML Visual story text
GMStdIfColShape_Story,"If${ifeq(""${not}"", ""0"", """", "" not"")} ${obj} intersects ${switch(""${shape}"", ""line"", ""rectangle"", ""ellipse"")} at ${dnd_position1} to ${dnd_position2}${ifeq(""${target}"", """", """", "" into ${ifeq('${aslist}', '1', 'list ', '')}${temp_target}"")}${show_apply_to}","If${ifeq(""${not}"", ""0"", """", "" not"")} ${obj} intersects ${switch(""${shape}"", ""line"", ""rectangle"", ""ellipse"")} at ${dnd_position1} to ${dnd_position2}${ifeq(""${target}"", """", """", "" into ${ifeq('${aslist}', '1', 'list ', '')}${temp_target}"")}${show_apply_to}",,GML Visual story text
GMStdIfColPoint_Story,"If${ifeq(""${not}"", ""0"", """", "" not"")} ${obj} intersects point ${dnd_position}${ifeq(""${target}"", """", """", "" into ${ifeq('${aslist}', '1', 'list ', '')}${temp_target}"")}${show_apply_to}","If${ifeq(""${not}"", ""0"", """", "" not"")} ${obj} intersects point ${dnd_position}${ifeq(""${target}"", """", """", "" into ${ifeq('${aslist}', '1', 'list ', '')}${temp_target}"")}${show_apply_to}",,GML Visual story text
GMStdDrawSelf_Story,"Draw self${show_apply_to}","Draw self${show_apply_to}",,GML Visual story text
GMStdDrawValue_Story,"Draw ${ifeq(""${caption}"", """", """", ""\""${caption}\"""")}${ifeq(""${var}"", """", """", "" ${var}"")} at ${dnd_position}${show_apply_to}","Draw ${ifeq(""${caption}"", """", """", ""\""${caption}\"""")}${ifeq(""${var}"", """", """", "" ${var}"")} at ${dnd_position}${show_apply_to}",,GML Visual story text
GMStdDrawValueTransformed_Story,"Draw transformed ${ifeq(""${caption}"", """", """", ""\""${caption}\"""")}${ifeq(""${var}"", """", """", "" ${var}"")} at ${dnd_position}${show_apply_to}","Draw transformed ${ifeq(""${caption}"", """", """", ""\""${caption}\"""")}${ifeq(""${var}"", """", """", "" ${var}"")} at ${dnd_position}${show_apply_to}",,GML Visual story text
GMStdDrawSprite_Story,"Draw sprite ${sprite} frame ${image} at ${dnd_position}${show_apply_to}","Draw sprite ${sprite} frame ${image} at ${dnd_position}${show_apply_to}",,GML Visual story text
GMStdDrawSpriteExt_Story,"Draw transformed sprite ${sprite} frame ${frame} with scale ${xscale},${yscale} and rotation ${rot}${show_apply_to}","Draw transformed sprite ${sprite} frame ${frame} with scale ${xscale},${yscale} and rotation ${rot}${show_apply_to}",,GML Visual story text
GMStdDrawSpritesStacked_Story,"Draw sprite ${sprite} in ${number} ${switch(""${stackorder}"",""rows"",""columns"")} at ${dnd_position}${show_apply_to}","Draw sprite ${sprite} in ${number} ${switch(""${stackorder}"",""rows"",""columns"")} at ${dnd_position}${show_apply_to}",,GML Visual story text
GMStdDrawRectangle_Story,"Draw rectangle from ${dnd_position1} to ${dnd_position2}${show_apply_to}","Draw rectangle from ${dnd_position1} to ${dnd_position2}${show_apply_to}",,GML Visual story text
GMStdDrawGradientRect_Story,"Draw gradient ${ifeq(""${fill}"", ""0"", ""rectangular outline"", ""rectangle"")} from ${dnd_position1} to ${dnd_position2}${show_apply_to}","Draw gradient ${ifeq(""${fill}"", ""0"", ""rectangular outline"", ""rectangle"")} from ${dnd_position1} to ${dnd_position2}${show_apply_to}",,GML Visual story text
GMStdDrawEllipse_Story,"Draw ellipse from ${dnd_position1} to ${dnd_position2}${show_apply_to}","Draw ellipse from ${dnd_position1} to ${dnd_position2}${show_apply_to}",,GML Visual story text
GMStdDrawGradientEllipse_Story,"Draw gradient ${ifeq(""${fill}"", ""0"", ""elliptical outline"", ""ellipse"")} from ${dnd_position1} to ${dnd_position2}${show_apply_to}","Draw gradient ${ifeq(""${fill}"", ""0"", ""elliptical outline"", ""ellipse"")} from ${dnd_position1} to ${dnd_position2}${show_apply_to}",,GML Visual story text
GMStdDrawLine_Story,"Draw line from ${dnd_position1} to ${dnd_position2}${show_apply_to}","Draw line from ${dnd_position1} to ${dnd_position2}${show_apply_to}",,GML Visual story text
GMStdDrawHealthbar_Story,"Draw healthbar from ${dnd_position1} to ${dnd_position2} with value ${value}${show_apply_to}","Draw healthbar from ${dnd_position1} to ${dnd_position2} with value ${value}${show_apply_to}",,GML Visual story text
GMStdDrawInstanceScore_Story,"Draw ${ifeq(""${applyto}"", ""self"", """", ""${applyto}'s "")}score at ${dnd_position} ${ifeq(""${caption}"", """", """", "" with caption \""${caption}\"""")}${show_apply_to}","Draw ${ifeq(""${applyto}"", ""self"", """", ""${applyto}'s "")}score at ${dnd_position}${ifeq(""${caption}"", """", """", "" with caption \""${caption}\"""")}${show_apply_to}",,GML Visual story text
GMStdDrawInstanceHealth_Story,"Draw ${ifeq(""${applyto}"", ""self"", """", ""${applyto}'s "")}healthbar from ${dnd_position1} to ${dnd_position2}${show_apply_to}","Draw ${ifeq(""${applyto}"", ""self"", """", ""${applyto}'s "")}healthbar from ${dnd_position1} to ${dnd_position2}${show_apply_to}",,GML Visual story text
GMStdDrawInstanceLives_Story,"Draw ${ifeq(""${applyto}"", ""self"", """", ""${applyto}'s "")}lives in a ${switch(""${stackorder}"",""row"",""column"")} at ${dnd_position}${show_apply_to}","Draw ${ifeq(""${applyto}"", ""self"", """", ""${applyto}'s "")}lives in a ${switch(""${stackorder}"",""row"",""column"")} at ${dnd_position}${show_apply_to}",,GML Visual story text
GMStdSetColor_Story,"Set draw color to ${color}${show_apply_to}","Set draw color to ${color}${show_apply_to}",,GML Visual story text
GMStdGetColor_Story,"Get draw color into ${var}${show_apply_to}","Get draw color into ${var}${show_apply_to}",,GML Visual story text
GMStdAlpha_Story,"Set drawing alpha channel to ${alpha}${show_apply_to}","Set drawing alpha channel to ${alpha}${show_apply_to}",,GML Visual story text
GMStdGetAlpha_Story,"Get drawing alpha channel into ${var}${show_apply_to}","Get drawing alpha channel into ${var}${show_apply_to}",,GML Visual story text
GMStdSetFont_Story,"Set font to ${font}${show_apply_to}","Set font to ${font}${show_apply_to}",,GML Visual story text
GMStdGetFont_Story,"Get draw font into ${var}${show_apply_to}","Get draw font into ${var}${show_apply_to}",,GML Visual story text
GMStdSetAlignment_Story,"Set text alignment to ${halign} and ${valign}${show_apply_to}","Set text alignment to ${halign} and ${valign}${show_apply_to}",,GML Visual story text
GMStdGetTextAlign_Story,"Get ${switch(""${align}"", ""horizontal"", ""vertical"")} text alignment into ${var}${show_apply_to}","Get ${switch(""${align}"", ""horizontal"", ""vertical"")} text alignment into ${var}${show_apply_to}",,GML Visual story text
GMStdTileSetAtPixel_Story,"Set tile on layer ${layername} at ${dnd_position} to ${tile}${show_apply_to}","Set tile on layer ${layername} at ${dnd_position} to ${tile}${show_apply_to}",,GML Visual story text
GMStdTileGetAtPixel_Story,"Get tile index at ${dnd_position} on layer ${layername} into ${temp_var}${show_apply_to}","Get tile index at ${dnd_position} on layer ${layername} into ${temp_var}${show_apply_to}",,GML Visual story text
GMStdTileSetInCell_Story,"Set tile on layer ${layername} in cell ${x},${y} to ${tile}${show_apply_to}","Set tile on layer ${layername} in cell ${x},${y} to ${tile}${show_apply_to}",,GML Visual story text
GMStdTileGetInCell_Story,"Get tile index in cell ${x},${y} on layer ${layername} into ${temp_var}${show_apply_to}","Get tile index in cell ${x},${y} on layer ${layername} into ${temp_var}${show_apply_to}",,GML Visual story text
GMStdTileSetTileSet_Story,"Set tile set ${tileset} on layer ${layername}${show_apply_to}","Set tile set ${tileset} on layer ${layername}${show_apply_to}",,GML Visual story text
GMStdTileGetVar_Story,"Get tilemap ${switch(""${var}"", ""x"", ""y"", ""width"", ""height"", ""tile width"", ""tile height"", ""resource"", ""frame"", ""mask"", ""global mask"")} on layer ${layername} into ${temp_target}${show_apply_to}${show_input_count}","Get tilemap ${switch(""${var}"", ""x"", ""y"", ""width"", ""height"", ""tile width"", ""tile height"", ""resource"", ""frame"", ""mask"", ""global mask"")} on layer ${layername} into ${temp_target}${show_apply_to}${show_input_count}",,GML Visual story text
GMStdTileSetElmPixel_Story,"Set tile data at ${dnd_position} on layer ${layername} to ${element}${show_apply_to}","Set tile data at ${dnd_position} on layer ${layername} to ${element}${show_apply_to}",,GML Visual story text
GMStdTileGetElmPixel_Story,"Get tile data at ${dnd_position} on layer ${layername} into ${temp_var}${show_apply_to}","Get tile data at ${dnd_position} on layer ${layername} into ${temp_var}${show_apply_to}",,GML Visual story text
GMStdTileSetElm_Story,"Set tile data in cell ${x},${y} on layer ${layername} to ${element}${show_apply_to}","Set tile data in cell ${x},${y} on layer ${layername} to ${element}${show_apply_to}",,GML Visual story text
GMStdTileGetElm_Story,"Get tile data in cell ${x},${y} on layer ${layername} into ${temp_var}${show_apply_to}","Get tile data in cell ${x},${y} on layer ${layername} into ${temp_var}${show_apply_to}",,GML Visual story text
GMStdTileTransform_Story,"${switch(""${transform}"", ""Flip"", ""Mirror"", ""Rotate"")} tile data ${tile}${show_apply_to}","${switch(""${transform}"", ""Flip"", ""Mirror"", ""Rotate"")} tile data ${tile}${show_apply_to}",,GML Visual story text
GMStdTileGetTransform_Story,"Get ${switch(""${transform}"", ""flip"", ""mirror"", ""rotate"")} of tile data ${tile} into ${temp_var}${show_apply_to}","Get ${switch(""${transform}"", ""flip"", ""mirror"", ""rotate"")} of tile data ${tile} into ${temp_var}${show_apply_to}",,GML Visual story text
GMStdPlayAudio_Story,"Play audio ${soundid}${ifeq(""${loop}"",""1"","" looped"","""")}${ifeq(""${target}"", """", "" and assign id to ${temp_target}"")}${show_apply_to}","Play audio ${soundid}${ifeq(""${loop}"",""1"","" looped"","""")}${ifeq(""${target}"", """", "" and assign id to ${temp_target}"")}${show_apply_to}",,GML Visual story text
GMStdStopAudio_Story,"Stop audio ${soundid}${show_apply_to}","Stop audio ${soundid}${show_apply_to}",,GML Visual story text
GMStdStopAllAudio_Story,"Stop all audio${show_apply_to}","Stop all audio${show_apply_to}",,GML Visual story text
GMStdPauseAudio_Story,"Pause audio ${sound}${show_apply_to}","Pause audio ${sound}${show_apply_to}",,GML Visual story text
GMStdPauseAllAudio_Story,"Pause all audio${show_apply_to}","Pause all audio${show_apply_to}",,GML Visual story text
GMStdResumeAudio_Story,"Resume audio ${sound}${show_apply_to}","Resume audio ${sound}${show_apply_to}",,GML Visual story text
GMStdResumeAllAudio_Story,"Resume all audio${show_apply_to}","Resume all audio${show_apply_to}",,GML Visual story text
GMStdAudioSetPosition_Story,"Set audio position of ${sound} to ${time} seconds${show_apply_to}","Set audio position of ${sound} to ${time} seconds${show_apply_to}",,GML Visual story text
GMStdAudioGetLength_Story,"Get length of audio ${sound} into ${temp_var}${show_apply_to}","Get length of audio ${sound} into ${temp_var}${show_apply_to}",,GML Visual story text
GMStdAudioSetPitch_Story,"Set pitch of audio ${sound} to ${pitch}${show_apply_to}","Set pitch of audio ${sound} to ${pitch}${show_apply_to}",,GML Visual story text
GMStdAudioGetPitch_Story,"Get pitch of audio ${sound} into ${temp_var}${show_apply_to}","Get pitch of audio ${sound} into ${temp_var}${show_apply_to}",,GML Visual story text
GMStdAudioSetVolume_Story,"Set volume of audio ${sound} to ${volume}${show_apply_to}","Set volume of audio ${sound} to ${volume}${show_apply_to}",,GML Visual story text
GMStdAudioGetVolume_Story,"Get volume of audio ${sound} into ${temp_var}${show_apply_to}","Get volume of audio ${sound} into ${temp_var}${show_apply_to}",,GML Visual story text
GMStdAudoSetMasterVolume_Story,"Set master volume to ${volume}${show_apply_to}","Set master volume to ${volume}${show_apply_to}",,GML Visual story text
GMStdAudioGetMasterVolume_Story,"Get master volume into ${temp_var}${show_apply_to}","Get master volume into ${temp_var}${show_apply_to}",,GML Visual story text
GMStdIfAudioPlaying_Story,"If audio ${soundid} is ${ifeq(""${not}"",""1"",""not "","""")}playing${show_apply_to}","If audio ${soundid} is ${ifeq(""${not}"",""1"",""not "","""")}playing${show_apply_to}",,GML Visual story text
GMStdIfAudioPaused_Story,"If audio ${soundid} is ${ifeq(""${not}"",""1"",""not "","""")}paused${show_apply_to}","If audio ${soundid} is ${ifeq(""${not}"",""1"",""not "","""")}paused${show_apply_to}",,GML Visual story text
GMStdLoop_Story,"Loop","Loop",,GML Visual story text
GMStdRepeat_Story,"Repeat ${times} times${show_apply_to}","Repeat ${times} times${show_apply_to}",,GML Visual story text
GMStdWhileLoop_Story,"While ${var} is ${ifeq(""${not}"", ""1"", ""not "", """")}${switch(""${op}"", ""equal to"", ""less than"", ""greater than"", ""greater than or equal to"", ""less than or equal to"")} ${value}${show_apply_to}","While ${var} is ${ifeq(""${not}"", ""1"", ""not "", """")}${switch(""${op}"", ""equal to"", ""less than"", ""greater than"", ""greater than or equal to"", ""less than or equal to"")} ${value}${show_apply_to}",,GML Visual story text
GMStdForLoop_Story,"For ${init}, while ${cond} do ${expr}${show_apply_to}","For ${init}, while ${cond} do ${expr}${show_apply_to}",,For loop story
GMStdBreak_Story,"Break","Break",,GML Visual story text
GMStdSwitch_Story,"Switch ${expr}${show_apply_to}","Switch ${expr}${show_apply_to}",,GML Visual story text
GMStdCase_Story,"Case: ${const}","Case: ${const}",,GML Visual story text
GMStdDefault_Story,"Default","Default",,GML Visual story text
GMStdCreateList_Story,"Set a new list to ${temp_var}${show_apply_to}${show_input_count}","Set a new list to ${temp_var}${show_apply_to}${show_input_count}",,GML Visual story text
GMStdCreateMap_Story,"Set a new map to ${temp_var}${show_apply_to}${show_input_count}","Set a new map to ${temp_var}${show_apply_to}${show_input_count}",,GML Visual story text
GMStdCreateGrid_Story,"Set a new grid with size ${width},${height} to ${temp_var}${show_apply_to}${show_input_count}","Set a new grid with size ${width},${height} to ${temp_var}${show_apply_to}${show_input_count}",,GML Visual story text
GMStdCreateStack_Story,"Set a new stack to ${temp_var}${show_apply_to}${show_input_count}","Set a new stack to ${temp_var}${show_apply_to}${show_input_count}",,GML Visual story text
GMStdDSClear_Story,"Clear ${switch(""${ds}"",""list"",""map"",""grid"",""stack"")} in ${var}${show_apply_to}${show_input_count}","Clear ${switch(""${ds}"",""list"",""map"",""grid"",""stack"")} in ${var}${show_apply_to}${show_input_count}",,GML Visual story text
GMStdDSFree_Story,"Free ${switch(""${ds}"",""list"",""map"",""grid"",""stack"")} ${var} from memory${show_apply_to}${show_input_count}","Free ${switch(""${ds}"",""list"",""map"",""grid"",""stack"")} ${var} from memory${show_apply_to}${show_input_count}",,GML Visual story text
GMStdListAdd_Story,"Add ${value} to list ${var}${show_apply_to}${show_input_count}","Add ${value} to list ${var}${show_apply_to}${show_input_count}",,GML Visual story text
GMStdListRemove_Story,"Remove item ${index} from list ${var}${show_apply_to}","Remove item ${index} from list ${var}${show_apply_to}",,GML Visual story text
GMStdListGetAt_Story,"Get item ${index} in list ${var} into ${temp_assignee}${show_apply_to}${show_input_count}","Get item ${index} in list ${var} into ${temp_assignee}${show_apply_to}${show_input_count}",,GML Visual story text
GMStdListIndexOf_Story,"Get index of item ${value} in list ${var} into ${temp_assignee}${show_apply_to}${show_input_count}","Get index of item ${value} in list ${var} into ${temp_assignee}${show_apply_to}${show_input_count}",,GML Visual story text
GMStdListInsert_Story,"Insert ${value} into list ${var} at index ${index}${show_apply_to}","Insert ${value} into list ${var} at index ${index}${show_apply_to}",,GML Visual story text
GMStdListCount_Story,"Get item count in list ${var} and assign it to ${temp_assignee}${show_apply_to}","Get item count in list ${var} and assign it to ${temp_assignee}${show_apply_to}",,GML Visual story text
GMStdMapSetValue_Story,"Set key ${key} to ${value} in map ${var}${show_apply_to}${show_input_count}","Set key ${key} to ${value} in map ${var}${show_apply_to}${show_input_count}",,GML Visual story text
GMStdMapGetValue_Story,"Get value of key ${key} in map ${map} into ${temp_assignee}${show_apply_to}${show_input_count}","Get value of key ${key} in map ${map} into ${temp_assignee}${show_apply_to}${show_input_count}",,GML Visual story text
GMStdMapRemove_Story,"Remove key ${key} from map ${map}${show_apply_to}${show_input_count}","Remove key ${key} from map ${map}${show_apply_to}${show_input_count}",,GML Visual story text
GMStdGridSetValue_Story,"Set ${value} in grid ${var} at ${x},${y}${show_apply_to}${show_input_count}","Set ${value} in grid ${var} at ${x},${y}${show_apply_to}${show_input_count}",,GML Visual story text
GMStdGridGetValue_Story,"Get value in grid ${var} at ${x},${y} into ${temp_assignee}${show_apply_to}${show_input_count}","Get value in grid ${var} at ${x},${y} into ${temp_assignee}${show_apply_to}${show_input_count}",,GML Visual story text
GMStdGridClear_Story,"Clear grid ${var} to value ${value}${show_apply_to}","Clear grid ${var} to value ${value}${show_apply_to}",,GML Visual story text
GMStdStackPush_Story,"Push ${value} onto stack ${var}${show_apply_to}${show_input_count}","Push ${value} onto stack ${var}${show_apply_to}${show_input_count}",,GML Visual story text
GMStdStackPop_Story,"Pop from stack ${var} into ${temp_assignee}${show_apply_to}${show_input_count}","Pop from stack ${var} into ${temp_assignee}${show_apply_to}${show_input_count}",,GML Visual story text
GMStdIfDSExists_Story,"If ${switch(""${ds}"",""list"",""map"",""grid"",""stack"")} ${var}${ifeq(""${not}"", ""1"", "" does not"", """")} exists${show_apply_to}","If ${switch(""${ds}"",""list"",""map"",""grid"",""stack"")} ${var}${ifeq(""${not}"", ""1"", "" does not"", """")} exists${show_apply_to}",,GML Visual story text
GMStdIfDSEmpty_Story,"If ${switch(""${ds}"",""list"",""map"",""grid"",""stack"")} ${var} is${ifeq(""${not}"", ""1"", "" not"", """")} empty${show_apply_to}","If ${switch(""${ds}"",""list"",""map"",""grid"",""stack"")} ${var} is${ifeq(""${not}"", ""1"", "" not"", """")} empty${show_apply_to}",,GML Visual story text
GMStdBufferCreate_Story,"Create buffer into ${temp_target}${show_apply_to}${show_input_count}","Create buffer into ${temp_target}${show_apply_to}${show_input_count}",,GML Visual story text
GMStdBufferCopy_Story,"Copy buffer ${buffer} into ${target}${show_apply_to}","Copy buffer ${buffer} into ${target}${show_apply_to}",,GML Visual story text
GMStdBufferDelete_Story,"Delete buffer ${buffer}${show_apply_to}${show_input_count}","Delete buffer ${buffer}${show_apply_to}${show_input_count}",,GML Visual story text
GMStdBufferRead_Story,"Read from buffer ${buffer}${ifeq(""${target}"", """", """", "" into ${temp_target}"")}${show_apply_to}","Read from buffer ${buffer}${ifeq(""${target}"", """", """", "" into ${temp_target}"")}${show_apply_to}",,GML Visual story text
GMStdBufferWrite_Story,"Write ${value} to buffer ${buffer}${show_apply_to}","Write ${value} to buffer ${buffer}${show_apply_to}",,GML Visual story text
GMStdBufferSeek_Story,"Seek to position ${pos} ${switch(""${seek}"", ""from start"", ""relative to position"", ""from end"")} in buffer ${buffer}${show_apply_to}","Seek to position ${pos} ${switch(""${seek}"", ""from start"", ""relative to position"", ""from end"")} in buffer ${buffer}${show_apply_to}",,GML Visual story text
GMStdBufferGetSize_Story,"Get size of buffer ${buffer} into ${temp_target}${show_apply_to}","Get size of buffer ${buffer} into ${temp_target}${show_apply_to}",,GML Visual story text
GMStdBufferGetPosition_Story,"Get position in buffer ${buffer} into ${temp_target}${show_apply_to}","Get position in buffer ${buffer} into ${temp_target}${show_apply_to}",,GML Visual story text
GMStdBufferExists_Story,"If buffer ${buffer} ${ifeq(""${not}"", ""1"", ""does not exist"", ""exists"")}${show_apply_to}","If buffer ${buffer} ${ifeq(""${not}"", ""1"", ""does not exist"", ""exists"")}${show_apply_to}",,GML Visual story text
GMStdBufferEOS_Story,"If end of buffer ${buffer} ${ifeq(""${not}"", ""1"", ""not "", """")}reached${show_apply_to}","If end of buffer ${buffer} ${ifeq(""${not}"", ""1"", ""not "", """")}reached${show_apply_to}",,GML Visual story text
GMStdBufferLoad_Story,"Load file ${filename} into buffer ${temp_target}${show_apply_to}","Load file ${filename} into buffer ${temp_target}${show_apply_to}",,GML Visual story text
GMStdBufferSave_Story,"Save buffer ${buffer} to file ${filename}${show_apply_to}","Save buffer ${buffer} to file ${filename}${show_apply_to}",,GML Visual story text
GMStdFileRename_Story,"Rename file ${file1} to ${file2}${show_apply_to}","Rename file ${file1} to ${file2}${show_apply_to}",,GML Visual story text
GMStdFileCopy_Story,"Copy file ${file1} to ${file2}${show_apply_to}","Copy file ${file1} to ${file2}${show_apply_to}",,GML Visual story text
GMStdFileDelete_Story,"Delete file ${file}${show_apply_to}","Delete file ${file}${show_apply_to}",,GML Visual story text
GMStdOpenIni_Story,"Open ini file ${filename}${show_apply_to}","Open ini file ${filename}${show_apply_to}",,GML Visual story text
GMStdCloseIni_Story,"Close ini file${show_apply_to}","Close ini file${show_apply_to}",,GML Visual story text
GMStdIniWrite_Story,"Write ${value} under key ${key} in section ${section} to ini file${show_apply_to}","Write ${value} under key ${key} in section ${section} to ini file${show_apply_to}",,GML Visual story text
GMStdIniRead_Story,"Read key ${key} in section ${section} and assign it to ${temp_var}${show_apply_to}","Read key ${key} in section ${section} and assign it to ${temp_var}${show_apply_to}",,GML Visual story text
GMStdIfFileExists_Story,"If file ${file} ${ifeq(""${not}"", ""1"", ""does not exist"", ""exists"")}${show_apply_to}","If file ${file} ${ifeq(""${not}"", ""1"", ""does not exist"", ""exists"")}${show_apply_to}",,GML Visual story text
GMStdDecimalToInteger_Story,"${switch(""${r}"", ""Round"", ""Ceil"", ""Floor"")} ${n} and assign it to ${temp_var}${show_apply_to}","${switch(""${r}"", ""Round"", ""Ceil"", ""Floor"")} ${n} and assign it to ${temp_var}${show_apply_to}",,GML Visual story text
GMStdStringToNumber_Story,"Convert ${value} to a string and assign it to ${temp_var}${show_apply_to}","Convert ${value} to a string and assign it to ${temp_var}${show_apply_to}",,GML Visual story text
GMStdNumberToString_Story,"Convert ${value} to a number and assign it to ${temp_var}${show_apply_to}","Convert ${value} to a number and assign it to ${temp_var}${show_apply_to}",,GML Visual story text
GMStdGetRandomNumber_Story,"Get a random number between ${min} and ${max} into ${temp_var}${show_apply_to}","Get a random number between ${min} and ${max} into ${temp_var}${show_apply_to}",,GML Visual story text
GMStdRandomize_Story,"Randomize seed","Randomize seed",,GML Visual story text
GMStdChoose_Story,"Get a random element from a list into ${temp_var}${show_apply_to}${show_input_count}","Get a random element from a list into ${temp_var}${show_apply_to}${show_input_count}",,GML Visual story text
GMStdSetViewVar_Story,"Set view ${switch(""${var}"", ""camera"", ""visibility"", ""port X"", ""port Y"", ""port width"", ""port height"", ""surface id"")} of view ${view} to ${value}${show_apply_to}","Set view ${switch(""${var}"", ""camera"", ""visibility"", ""port X"", ""port Y"", ""port width"", ""port height"", ""surface id"")} of view ${view} to ${value}${show_apply_to}",,GML Visual story text
GMStdGetViewVar_Story,"Get view ${switch(""${var}"", ""camera"", ""visibility"", ""port X"", ""port Y"", ""port width"", ""port height"", ""surface id"")} of view ${view} into ${temp_target}${show_apply_to}","Get view ${switch(""${var}"", ""camera"", ""visibility"", ""port X"", ""port Y"", ""port width"", ""port height"", ""surface id"")} of view ${view} into ${temp_target}${show_apply_to}",,GML Visual story text
GMStdGoToRoom_Story,"Go to room ${room}${show_apply_to}","Go to room ${room}${show_apply_to}",,GML Visual story text
GMStdNextRoom_Story,"Go to next room","Go to next room",,GML Visual story text
GMStdPreviousRoom_Story,"Go to previous room","Go to previous room",,GML Visual story text
GMStdRestartRoom_Story,"Restart current room","Restart current room",,GML Visual story text
GMStdIfFirstRoom_Story,"If this is ${ifeq(""${not}"", ""1"", ""not "", """")}the first room","If this is ${ifeq(""${not}"", ""1"", ""not "", """")}the first room",,GML Visual story text
GMStdIfLastRoom_Story,"If this is ${ifeq(""${not}"", ""1"", ""not "", """")}the last room","If this is ${ifeq(""${not}"", ""1"", ""not "", """")}the last room",,GML Visual story text
GMStdGetCurrentRoom_Story,"Get current room into ${temp_var}${show_apply_to}","Get current room into ${temp_var}${show_apply_to}",,GML Visual story text
GMStdStartPath_Story,"Start path ${path} with speed ${speed} and ${atend} on end${show_apply_to}","Start path ${path} with speed ${speed} and ${atend} on end${show_apply_to}",,GML Visual story text
GMStdStopPath_Story,"Stop following a path${show_apply_to}","Stop following a path${show_apply_to}",,GML Visual story text
GMStdPathPosition_Story,"${ifeq(""${position_relative}"", ""1"", ""Add ${position} to path position"", ""Set path position to ${position}"")}${show_apply_to}","${ifeq(""${position_relative}"", ""1"", ""Add ${position} to path position"", ""Set path position to ${position}"")}${show_apply_to}",,GML Visual story text
GMStdPathGetPosition_Story,"Get path position into ${temp_target}${show_apply_to}","Get path position into ${temp_target}${show_apply_to}",,GML Visual story text
GMStdPathSpeed_Story,"${ifeq(""${speed_relative}"", ""1"", ""Add ${speed} to path speed"", ""Set path speed to ${speed}"")}${show_apply_to}","${ifeq(""${speed_relative}"", ""1"", ""Add ${speed} to path speed"", ""Set path speed to ${speed}"")}${show_apply_to}",,GML Visual story text
GMStdPathGetSpeed_Story,"Get path speed into ${temp_target}${show_apply_to}","Get path speed into ${temp_target}${show_apply_to}",,GML Visual story text
GMStdSetTimeline_Story,"${ifeq(""${running}"",""1"",""Start"",""Set"")} timeline ${timeline}${ifeq(""${loop}"",""1"","" and loop it"","""")}${show_apply_to}","${ifeq(""${running}"",""1"",""Start"",""Set"")} timeline ${timeline}${ifeq(""${loop}"",""1"","" and loop it"","""")}${show_apply_to}",,GML Visual story text
GMStdPositionTimeline_Story,"${ifeq(""${position_relative}"", ""1"", ""Add ${position} to timeline position"", ""Set timeline position to ${position}"")}${show_apply_to}","${ifeq(""${position_relative}"", ""1"", ""Add ${position} to timeline position"", ""Set timeline position to ${position}"")}${show_apply_to}",,GML Visual story text
GMStdSpeedTimeline_Story,"${ifeq(""${speed_relative}"", ""1"", ""Add ${speed} to timeline speed"", ""Set timeline speed to ${speed}"")}${show_apply_to}","${ifeq(""${speed_relative}"", ""1"", ""Add ${speed} to timeline speed"", ""Set timeline speed to ${speed}"")}${show_apply_to}",,GML Visual story text
GMStdSetTimelineState_Story,"${switch(""${state}"",""Start"",""Resume"",""Pause"",""Stop"")} timeline${show_apply_to}","${switch(""${state}"",""Start"",""Resume"",""Pause"",""Stop"")} timeline${show_apply_to}",,GML Visual story text
GMStdRestartGame_Story,"Restart game","Restart game",,GML Visual story text
GMStdEndGame_Story,"Exit game","Exit game",,GML Visual story text
GMStdSaveGame_Story,"Save game to file ${filename}${show_apply_to}","Save game to file ${filename}${show_apply_to}",,GML Visual story text
GMStdLoadGame_Story,"Load game from file ${filename}${show_apply_to}","Load game from file ${filename}${show_apply_to}",,GML Visual story text
GMStdSetScore_Story,"${ifeq(""${score_relative}"", ""1"", ""Add ${score} to score"", ""Set score to ${score}"")}${show_apply_to}","${ifeq(""${score_relative}"", ""1"", ""Add ${score} to score"", ""Set score to ${score}"")}${show_apply_to}",,GML Visual story text
GMStdGetScore_Story,"Get score into ${temp_var}${show_apply_to}","Get score into ${temp_var}${show_apply_to}",,GML Visual story text
GMStdSetLives_Story,"${ifeq(""${lives_relative}"", ""1"", ""Add ${lives} to lives"", ""Set lives to ${lives}"")}${show_apply_to}","${ifeq(""${lives_relative}"", ""1"", ""Add ${lives} to lives"", ""Set lives to ${lives}"")}${show_apply_to}",,GML Visual story text
GMStdGetLives_Story,"Get lives into ${temp_var}${show_apply_to}","Get lives into ${temp_var}${show_apply_to}",,GML Visual story text
GMStdSetHealth_Story,"${ifeq(""${health_relative}"", ""1"", ""Add ${health} to health"", ""Set health to ${health}"")}${show_apply_to}","${ifeq(""${health_relative}"", ""1"", ""Add ${health} to health"", ""Set health to ${health}"")}${show_apply_to}",,GML Visual story text
GMStdGetHealth_Story,"Get health into ${temp_var}${show_apply_to}","Get health into ${temp_var}${show_apply_to}",,GML Visual story text
GMStdIfScore_Story,"If instance score is ${ifeq(""${not}"", ""1"", ""not "", """")}${switch(""${op}"", ""equal to"", ""less than"", ""greater than"", ""less than or equal to"", ""greater than or equal to"")} ${value}${show_apply_to}","If instance score is ${ifeq(""${not}"", ""1"", ""not "", """")}${switch(""${op}"", ""equal to"", ""less than"", ""greater than"", ""less than or equal to"", ""greater than or equal to"")} ${value}${show_apply_to}",,GML Visual story text
GMStdIfLives_Story,"If instance lives is ${ifeq(""${not}"", ""1"", ""not "", """")}${switch(""${op}"", ""equal to"", ""less than"", ""greater than"", ""less than or equal to"", ""greater than or equal to"")} ${value}${show_apply_to}","If instance lives is ${ifeq(""${not}"", ""1"", ""not "", """")}${switch(""${op}"", ""equal to"", ""less than"", ""greater than"", ""less than or equal to"", ""greater than or equal to"")} ${value}${show_apply_to}",,GML Visual story text
GMStdIfHealth_Story,"If instance health is ${ifeq(""${not}"", ""1"", ""not "", """")}${switch(""${op}"", ""equal to"", ""less than"", ""greater than"", ""less than or equal to"", ""greater than or equal to"")} ${value}${show_apply_to}","If instance health is ${ifeq(""${not}"", ""1"", ""not "", """")}${switch(""${op}"", ""equal to"", ""less than"", ""greater than"", ""less than or equal to"", ""greater than or equal to"")} ${value}${show_apply_to}",,GML Visual story text
GMStdDebugShowMessage_Story,"Show debug message ${msg}${show_apply_to}${show_input_count}","Show debug message ${msg}${show_apply_to}${show_input_count}",,GML Visual story text
GMStdSetWindowState_Story,"${switch(""${type}"", ""Toggle window state"", ""Set window state to window"", ""Set window state to fullscreen"")}","${switch(""${type}"", ""Toggle window state"", ""Set window state to window"", ""Set window state to fullscreen"")}",,GML Visual story text
GMStdPartSystCreate_Story,"Create a ${ifeq(""${persist}"", ""1"", ""persistent "", """")}particle system on layer ${layer} into ${temp_var}${show_apply_to}","Create a ${ifeq(""${persist}"", ""1"", ""persistent "", """")}particle system on layer ${layer} into ${temp_var}${show_apply_to}",,GML Visual story text
GMStdPartSystDestroy_Story,"Destroy particle system ${system}${show_apply_to}","Destroy particle system ${system}${show_apply_to}",,GML Visual story text
GMStdPartSystClear_Story,"Clear particle system ${system}${show_apply_to}","Clear particle system ${system}${show_apply_to}",,GML Visual story text
GMStdPauseParticles_Story,"${switch(""${state}"",""Resume"",""Pause"")} particle system ${system}${show_apply_to}","${switch(""${state}"",""Resume"",""Pause"")} particle system ${system}${show_apply_to}",,GML Visual story text
GMStdRefreshParticles_Story,"Update particle system ${system}${show_apply_to}","Update particle system ${system}${show_apply_to}",,GML Visual story text
GMStdPartTypeCreate_Story,"Create a new ${ifeq(""${blend}"", ""1"", ""blending "", """")}particle type into ${temp_var}${show_apply_to}","Create a new ${ifeq(""${blend}"", ""1"", ""blending "", """")}particle type into ${temp_var}${show_apply_to}",,GML Visual story text
GMStdPartTypeDestroy_Story,"Destroy particle type ${type}${show_apply_to}","Destroy particle type ${type}${show_apply_to}",,GML Visual story text
GMStdPartTypeSize_Story,"Set size of particle type ${type} from min ${minsize} to max ${maxsize} with increase ${sizeincr} and wiggle ${wiggle}${show_apply_to}","Set size of particle type ${type} from min ${minsize} to max ${maxsize} with increase ${sizeincr} and wiggle ${wiggle}${show_apply_to}",,GML Visual story text
GMStdPartTypeSprite_Story,"Set sprite of particle type ${type} to ${sprite}${show_apply_to}","Set sprite of particle type ${type} to ${sprite}${show_apply_to}",,GML Visual story text
GMStdPartTypeShape_Story,"Set shape of particle type ${type} to ${shape}${show_apply_to}","Set shape of particle type ${type} to ${shape}${show_apply_to}",,GML Visual story text
GMStdPartTypeColor_Story,"Set colour of particle type ${type} to start ${startcol}, mid ${midcol}, end ${endcol}${show_apply_to}","Set colour of particle type ${type} to start ${startcol}, mid ${midcol}, end ${endcol}${show_apply_to}",,GML Visual story text
GMStdPartTypeAlpha_Story,"Set alpha channel of particle type ${type} to ${ifeq(""${middle}"", """", ""start ${start}, end ${end}"", ""start ${start}, mid ${middle}, end ${end}"")}${show_apply_to}","Set alpha channel of particle type ${type} to ${ifeq(""${middle}"", """", ""start ${start}, end ${end}"", ""start ${start}, mid ${middle}, end ${end}"")}${show_apply_to}",,GML Visual story text
GMStdPartTypeLife_Story,"Set life of particle type ${typ} from min ${minlife} to max ${maxlife}${show_apply_to}","Set life of particle type ${typ} from min ${minlife} to max ${maxlife}${show_apply_to}",,GML Visual story text
GMStdPartTypeSpeed_Story,"Set speed of particle type ${type} from min ${minspeed} to max ${maxspeed} with increase ${incr} and wiggle ${wiggle}${show_apply_to}","Set speed of particle type ${type} from min ${minspeed} to max ${maxspeed} with increase ${incr} and wiggle ${wiggle}${show_apply_to}",,GML Visual story text
GMStdPartTypeDirection_Story,"Set direction of particle type ${type} from min ${mindir} to max ${maxdir} with rotation ${incr} and wiggle ${wiggle}${show_apply_to}","Set direction of particle type ${type} from min ${mindir} to max ${maxdir} with rotation ${incr} and wiggle ${wiggle}${show_apply_to}",,GML Visual story text
GMStdPartTypeOrientation_Story,"Set ${ifeq(""${rel}"", ""1"", ""relative "", """")}orientation of particle type ${type} from min ${minangle} to max ${maxangle} with rotation ${incr} and wiggle ${wiggle}${show_apply_to}","Set ${ifeq(""${rel}"", ""1"", ""relative "", """")}orientation of particle type ${type} from min ${minangle} to max ${maxangle} with rotation ${incr} and wiggle ${wiggle}${show_apply_to}",,GML Visual story text
GMStdPartTypeGravity_Story,"Set gravity of particle type ${type} to ${amount} in direction ${direction}${show_apply_to}","Set gravity of particle type ${type} to ${amount} in direction ${direction}${show_apply_to}",,GML Visual story text
GMStdPartTypeSecondary_Story,"Create ${count} secondary particles from type ${type} of type ${secondary} ${switch(""${event}"", ""per step"", ""on death"")}${show_apply_to}","Create ${count} secondary particles from type ${type} of type ${secondary} ${switch(""${event}"", ""per step"", ""on death"")}${show_apply_to}",,GML Visual story text
GMStdPartCreateBurst_Story,"Burst ${number} particles of type ${type} in system ${system} at ${dnd_position}${show_apply_to}","Burst ${number} particles of type ${type} in system ${system} at ${dnd_position}${show_apply_to}",,GML Visual story text
GMStdPartEmitCreate_Story,"Create a particle emitter in system ${system} into ${temp_emitter}${show_apply_to}","Create a particle emitter in system ${system} into ${temp_emitter}${show_apply_to}",,GML Visual story text
GMStdPartEmitDestroy_Story,"Destroy particle emitter ${emitter} in system ${system}${show_apply_to}","Destroy particle emitter ${emitter} in system ${system}${show_apply_to}",,GML Visual story text
GMStdPartEmitterEmit_Story,"${switch(""${event}"", ""Burst"", ""Stream"")} ${number} particles of type ${type} from emitter ${emitter} in system ${system}${show_apply_to}","${switch(""${event}"", ""Burst"", ""Stream"")} ${number} particles of type ${type} from emitter ${emitter} in system ${system}${show_apply_to}",,GML Visual story text
GMStdPartEmitRegion_Story,"Emit from ${emitter} in system ${system} in a ${switch(""${shape}"", ""rectangular shape"", ""elliptical shape"", ""diamond shape"", ""straight line"")} with ${switch(""${distribution}"", ""linear"", ""gaussian"", ""inverse gaussian"")} distribution${show_apply_to}","Emit from ${emitter} in system ${system} in a ${switch(""${shape}"", ""rectangular shape"", ""elliptical shape"", ""diamond shape"", ""straight line"")} with ${switch(""${distribution}"", ""linear"", ""gaussian"", ""inverse gaussian"")} distribution${show_apply_to}",,GML Visual story text
GMStdEffect_Story,"Show effect at ${dnd_position}${show_apply_to}","Show effect at ${dnd_position}${show_apply_to}",,GML Visual story text
TextMateTheme_New,New Theme,New Theme,,New Theme
TextMateTheme_AddScope,Add Scope,Add Scope,,Add Scope
